// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";
package binance.tsslib.ecdsa.signing;
option go_package = "tss/ecdsa/signing";

/*
 * Represents a P2P message sent to each party during Round 1 of the ECDSA TSS pre-signing protocol.
 */
message PreSignRound1Message {
    bytes K = 1;
    bytes G = 2;
    repeated bytes EncProof = 3;
}

/*
 * Represents a P2P message sent to each party during Round 2 of the ECDSA TSS pre-signing protocol.
 */
message PreSignRound2Message {
    repeated bytes BigGammaShare = 1;
    bytes DjiDelta = 2;
    bytes FjiDelta = 3;
    bytes DjiChi = 4;
    bytes FjiChi = 5;
    repeated bytes AffgProofDelta = 6;
    repeated bytes AffgProofChi = 7;
    repeated bytes LogstarProof = 8;
}

/*
 * Represents a P2P message sent to all parties during Round 3 of the ECDSA TSS pre-signing protocol.
 */
message PreSignRound3Message {
    bytes DeltaShare = 1;
    repeated bytes BigDeltaShare = 2;
    repeated bytes ProofLogstar = 3;
}

/*
 * Represents a BROADCAST message sent to all parties during Round 4 of the ECDSA TSS signing protocol.
 */
message SignRound4Message {
    bytes SigmaShare = 1;
}

message SignRound4AbortingMessage {
}

message IdentificationPrepRound5Message {
    bytes Gamma = 1;
    bytes Sji = 2;
    bytes BetaNegji = 3;
}

message IdentificationRound6Message {
    bytes H = 1;
    repeated bytes MulProof = 2;
    bytes DeltaShareEnc = 3;
    bytes EncryptedValueSum = 4;
    repeated bytes DecProof = 5;
}

message TempDataDumpMessage {
    bytes DataDump = 1;
    int32 RoundNum = 2;
}