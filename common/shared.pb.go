// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: shared.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ECPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             []byte                 `protobuf:"bytes,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             []byte                 `protobuf:"bytes,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECPoint) Reset() {
	*x = ECPoint{}
	mi := &file_shared_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECPoint) ProtoMessage() {}

func (x *ECPoint) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECPoint.ProtoReflect.Descriptor instead.
func (*ECPoint) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{0}
}

func (x *ECPoint) GetX() []byte {
	if x != nil {
		return x.X
	}
	return nil
}

func (x *ECPoint) GetY() []byte {
	if x != nil {
		return x.Y
	}
	return nil
}

type ECSignature struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Signature []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	// Ethereum-style Recovery ID: Used to enable extracting the public key from the signature.
	SignatureRecovery []byte `protobuf:"bytes,2,opt,name=signature_recovery,json=signatureRecovery,proto3" json:"signature_recovery,omitempty"`
	// Signature components R, S
	R []byte `protobuf:"bytes,3,opt,name=r,proto3" json:"r,omitempty"`
	S []byte `protobuf:"bytes,4,opt,name=s,proto3" json:"s,omitempty"`
	// M represents the original message digest that was signed M
	M             []byte `protobuf:"bytes,5,opt,name=m,proto3" json:"m,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ECSignature) Reset() {
	*x = ECSignature{}
	mi := &file_shared_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ECSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ECSignature) ProtoMessage() {}

func (x *ECSignature) ProtoReflect() protoreflect.Message {
	mi := &file_shared_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ECSignature.ProtoReflect.Descriptor instead.
func (*ECSignature) Descriptor() ([]byte, []int) {
	return file_shared_proto_rawDescGZIP(), []int{1}
}

func (x *ECSignature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ECSignature) GetSignatureRecovery() []byte {
	if x != nil {
		return x.SignatureRecovery
	}
	return nil
}

func (x *ECSignature) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *ECSignature) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *ECSignature) GetM() []byte {
	if x != nil {
		return x.M
	}
	return nil
}

var File_shared_proto protoreflect.FileDescriptor

const file_shared_proto_rawDesc = "" +
	"\n" +
	"\fshared.proto\"%\n" +
	"\aECPoint\x12\f\n" +
	"\x01x\x18\x01 \x01(\fR\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\fR\x01y\"\x84\x01\n" +
	"\vECSignature\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\x12-\n" +
	"\x12signature_recovery\x18\x02 \x01(\fR\x11signatureRecovery\x12\f\n" +
	"\x01r\x18\x03 \x01(\fR\x01r\x12\f\n" +
	"\x01s\x18\x04 \x01(\fR\x01s\x12\f\n" +
	"\x01m\x18\x05 \x01(\fR\x01mB\n" +
	"Z\b./commonb\x06proto3"

var (
	file_shared_proto_rawDescOnce sync.Once
	file_shared_proto_rawDescData []byte
)

func file_shared_proto_rawDescGZIP() []byte {
	file_shared_proto_rawDescOnce.Do(func() {
		file_shared_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_shared_proto_rawDesc), len(file_shared_proto_rawDesc)))
	})
	return file_shared_proto_rawDescData
}

var file_shared_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_shared_proto_goTypes = []any{
	(*ECPoint)(nil),     // 0: ECPoint
	(*ECSignature)(nil), // 1: ECSignature
}
var file_shared_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_shared_proto_init() }
func file_shared_proto_init() {
	if File_shared_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_shared_proto_rawDesc), len(file_shared_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shared_proto_goTypes,
		DependencyIndexes: file_shared_proto_depIdxs,
		MessageInfos:      file_shared_proto_msgTypes,
	}.Build()
	File_shared_proto = out.File
	file_shared_proto_goTypes = nil
	file_shared_proto_depIdxs = nil
}
